# This example shows how to persist all payloads to a storage service
debug: true

listeners:

  # Store to GCS
  # Ref: https://beyondstorage.io/docs/go-storage/services/gcs
  # Test with:
  #
  # curl "http://localhost:7055/gcs?query1=hello" -d '{"name":"Mr. Anderson"}' -H 'Content-Type: application/json' -H 'X-Hello: 123'
  #
  # and check if the payload, command and output have been written in your bucket!
  #
  /gcs:
    storage:
      # Replace with your credentials and details
      # NOTE: you can also replace this value using environment variables, e.g.
      # QV_LISTENERS__GCS_STORAGE_CONN=gcs://<bucket_name...
      conn: 'gcs://<bucket_name>/<work_dir>?credential=file:<absolute_path_to_token_file>&project_id=<google_cloud_project_id>'

      # Store args, command and output
      store: args,command,output
      # Also available: all,env

    command: echo
    args:
      - '{{ dump . }}'

  # Store to a local folder
  # Ref: https://beyondstorage.io/docs/go-storage/services/fs
  # Test with:
  #
  # curl "http://localhost:7055/fs?query1=hello" -d '{"name":"Mr. Anderson"}' -H 'Content-Type: application/json' -H 'X-Hello: 123'
  #
  # and check if the payload has been written in your folder!
  #
  /fs:
    storage:
      conn: 'fs:///tmp/qvalet_test_dir' # fs:///<path_from_root>
      store: all

      # In this case, store the result in YAML format
      asYAML: true

    command: echo
    args:
      - '{{ dump . }}'

  # Crashes the program and stores the error handler command execution result to a local folder
  # Ref: https://beyondstorage.io/docs/go-storage/services/fs
  # Test with:
  #
  # [500,ERR] curl "http://localhost:7055/crash?query1=hello"
  #
  # and check if in the folder there is now a file with `-error` in its name!
  /crash:
    command: bash
    args:
      - -c
      - |
        echo "Oh no!"
        exit 1

    errorHandler:
      command: echo
      args:
        - '{{ dump . }}'
      storage:
        conn: 'fs:///tmp/qvalet_test_dir' # fs:///<path_from_root>
        store: all
        asYAML: true