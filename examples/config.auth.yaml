# All logging enabled
debug: true
defaults:
  # Example for how to set a global auth
  auth:
    - apiKeys:
        - defaultSecret
      basicAuth: true

listeners:

  ### [docs-basic-auth]
  # Tests basic HTTP authentication
  #
  # Test with:
  # [200] curl "http://localhost:7055/auth/basic" -u myUser:helloBasic
  # Expect "Hello basic!"
  # [401] curl "http://localhost:7055/auth/basic" -u myUser:helloBasicWrong
  # Expect error "bad auth"
  /auth/basic:

    auth:
      - apiKeys:
          - helloBasic
        basicAuth: true
        # If not provided, defaults to `gte`
        basicAuthUser: myUser

    command: bash
    args:
      - -c
      - echo "Hello basic!"
  ### [docs-basic-auth]

  ### [docs-basic-auth-env]
  # Tests basic HTTP authentication using environment variables to store the api key.
  #
  # Run the example with env vars:
  #
  # EXAMPLE_AUTH_BASIC_ENV_APIKEY=helloBasicEnv
  #
  # Test with:
  #
  # [200] curl "http://localhost:7055/auth/basicEnv" -u myUser:helloBasicEnv
  # Expect "Hello basic env!"
  # [401] curl "http://localhost:7055/auth/basicEnv" -u myUser:helloBasicWrong
  # Expect error "bad auth"
  /auth/basicEnv:

    auth:
      - apiKeys:
          - ENV{EXAMPLE_AUTH_BASIC_ENV_APIKEY}
        basicAuth: true
        # If not provided, defaults to `gte`
        basicAuthUser: myUser

    command: bash
    args:
      - -c
      - echo "Hello basic env!"
  ### [docs-basic-auth-env]

  ### [docs-query-auth]
  # Tests url query authentication
  #
  # Test with:
  # [200] curl "http://localhost:7055/auth/query?myAuthKey=helloQuery"
  # [401] curl "http://localhost:7055/auth/query?myAuthKey=helloQueryWrong"
  /auth/query:

    auth:
      - apiKeys:
          - helloQuery
        queryAuth: true
        # If not provided, defaults to `__gteApiKey`
        queryAuthKey: myAuthKey

    command: bash
    args:
      - -c
      - echo "Hello query!"
  ### [docs-query-auth]

  ### [docs-header-auth]
  # Tests header authentication
  #
  # Test with:
  # [200] curl "http://localhost:7055/auth/header" -H 'x-my-auth: helloHeader'
  # [401] curl "http://localhost:7055/auth/header" -H 'x-my-auth: helloHeaderWrong'
  /auth/header:

    auth:
      - apiKeys:
          - helloHeader
        authHeaders:
          - header: x-my-auth

    command: bash
    args:
      - -c
      - echo "Hello header!"
  ### [docs-header-auth]

  ### [docs-header-auth-hmac-sha256]
  # Tests header authentication with HMAC-SHA256
  #
  # Test with:
  # [200] curl "http://localhost:7055/auth/header-hmac-sha256" -H 'X-Verify: 53dac1b832da1a9c46285c9ddb7af65d139199690e62abd628063a6fbd697394' -d '{"name":"Quake"}' -H 'Content-Type: application/json'
  # [401] curl "http://localhost:7055/auth/header-hmac-sha256" -H 'X-Verify: 53dac1b832da1a9c46285c9ddb7af65d139199690e62abd628063a6fbd697394' -d '{"name":"QuakeWrong"}' -H 'Content-Type: application/json'
  /auth/header-hmac-sha256:

    auth:
      - apiKeys:
          # This is the HMAC-SHA256 secret key
          - uG75Jmv4eTrfjUvi9RPU9kXtmKtJW6OE
        authHeaders:
          - header: X-Verify
            method: hmac-sha256

    command: bash
    args:
      - -c
      - |
        echo "Hello header with HMAC-SHA256 method: {{ .name }}!"
  ### [docs-header-auth-hmac-sha256]

  ### [docs-header-auth-hmac-sha256-transform]
  # Tests header authentication using the `transform` field
  #
  # Test with:
  # [200] curl "http://localhost:7055/auth/header-hmac-sha256-transform" -H 'X-Verify: sha256=53dac1b832da1a9c46285c9ddb7af65d139199690e62abd628063a6fbd697394' -d '{"name":"Quake"}' -H 'Content-Type: application/json'
  # [401] curl "http://localhost:7055/auth/header-hmac-sha256-transform" -H 'X-Verify: sha256=53dac1b832da1a9c46285c9ddb7af65d139199690e62abd628063a6fbd697394' -d '{"name":"QuakeWrong"}' -H 'Content-Type: application/json'
  /auth/header-hmac-sha256-transform:

    auth:
      - apiKeys:
          # This is the HMAC-SHA256 secret key
          - uG75Jmv4eTrfjUvi9RPU9kXtmKtJW6OE
        authHeaders:
          - header: X-Verify
            method: hmac-sha256
            # Example of transform, to strip a initial `sha256=` value provided
            # in the header value for comparison with the apiKeys array
            # sha256=value -> value
            transform: '{{ replace "sha256=" "" . }}'

    command: bash
    args:
      - -c
      - |
        echo "Hello header with HMAC-SHA256 method and transform: {{ .name }}!"
  ### [docs-header-auth-hmac-sha256-transform]

  # Use the default authentication
  #
  # Test with:
  # [200] curl "http://localhost:7055/auth/default" -u 'gte:defaultSecret'
  # [401] curl "http://localhost:7055/auth/default" -u 'gte:defaultSecretWrong'
  /auth/default:

    command: bash
    args:
      - -c
      - echo "Hello global auth!"